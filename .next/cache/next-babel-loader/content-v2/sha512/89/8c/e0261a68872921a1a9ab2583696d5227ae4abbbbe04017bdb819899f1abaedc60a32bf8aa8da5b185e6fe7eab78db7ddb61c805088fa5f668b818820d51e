{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\deco_\\\\NLW\\\\pomoshake-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  });\n  useEffect(function () {}, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio(\"/lvlup.wav\").play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio ðŸ’ª\", {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"POCod5lVJzLDZnxgMknXr3PjRHI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/deco_/NLW/pomoshake-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CL,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEM,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAEtBP,QAAQ,CAAC,CAAD,CAFc;AAAA,MAEjEQ,iBAFiE;AAAA,MAE9CC,oBAF8C;;AAAA,mBAGlBT,QAAQ,CAAC,CAAD,CAHU;AAAA,MAGjEU,mBAHiE;AAAA,MAG5CC,sBAH4C;;AAAA,mBAK1BX,QAAQ,CAAC,IAAD,CALkB;AAAA,MAKjEY,eALiE;AAAA,MAKhDC,kBALgD;;AAMxE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,YAAY,CAACC,iBAAb;AACD,GAFQ,CAAT;AAIAjB,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACK,KAAD,EAAQE,iBAAR,EAA2BE,mBAA3B,CAAX,CAAT;;AAEA,WAASS,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AAC3B,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,YAAV,EAAwBC,IAAxB;;AAEA,QAAIV,YAAY,CAACW,UAAb,KAA4B,SAAhC,EAA2C;AACzC,UAAIX,YAAJ,CAAiB,iBAAjB,EAAoC;AAClCY,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AAD8B,OAApC;AAGD;AACF;;AAED,WAASC,cAAT,GAA0B;AACxBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASmB,iBAAT,GAA6B;AAC3B,QAAI,CAACpB,eAAL,EAAsB;AACpB;AACD;;AAH0B,QAInBkB,MAJmB,GAIRlB,eAJQ,CAInBkB,MAJmB;AAK3B,QAAIG,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAIG,eAAe,IAAInB,qBAAvB,EAA8C;AAC5CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,qBAApC;AACAK,MAAAA,OAAO;AACR;;AACDV,IAAAA,oBAAoB,CAACwB,eAAD,CAApB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILS,MAAAA,OAAO,EAAPA,OAJK;AAKLC,MAAAA,iBAAiB,EAAjBA,iBALK;AAMLR,MAAAA,eAAe,EAAfA,eANK;AAOLmB,MAAAA,cAAc,EAAdA,cAPK;AAQLjB,MAAAA,qBAAqB,EAArBA,qBARK;AASLkB,MAAAA,iBAAiB,EAAjBA;AATK,KADT;AAAA,cAaG3B;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from \"react\";\r\nimport challenges from \"../../challenges.json\";\r\n\r\ntype challenge = {\r\n  type: \"body\" | \"eye\";\r\n  description: string;\r\n  amount: number;\r\n};\r\n\r\ntype ChallengesContextData = {\r\n  level: number;\r\n  currentExperience: number;\r\n  experienceToNextLevel: number;\r\n  challengesCompleted: number;\r\n  activeChallenge: challenge;\r\n  levelUp: () => void;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenge: () => void;\r\n};\r\n\r\ntype ChallengesProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n  const [level, setLevel] = useState(1);\r\n  const [currentExperience, setCurrentExperience] = useState(0);\r\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n  const [activeChallenge, setActiveChallenge] = useState(null);\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n  useEffect(() => {\r\n    Notification.requestPermission();\r\n  });\r\n\r\n  useEffect(() => {}, [level, currentExperience, challengesCompleted]);\r\n\r\n  function levelUp() {\r\n    setLevel(level + 1);\r\n  }\r\n\r\n  function startNewChallenge() {\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n    const challenge = challenges[randomChallengeIndex];\r\n\r\n    setActiveChallenge(challenge);\r\n\r\n    new Audio(\"/lvlup.wav\").play();\r\n\r\n    if (Notification.permission === \"granted\") {\r\n      new Notification(\"Novo desafio ðŸ’ª\", {\r\n        body: `Valendo ${challenge.amount}xp!`,\r\n      });\r\n    }\r\n  }\r\n\r\n  function resetChallenge() {\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenge() {\r\n    if (!activeChallenge) {\r\n      return;\r\n    }\r\n    const { amount } = activeChallenge;\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if (finalExperience >= experienceToNextLevel) {\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n      levelUp();\r\n    }\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n  }\r\n\r\n  return (\r\n    <ChallengesContext.Provider\r\n      value={{\r\n        level,\r\n        currentExperience,\r\n        challengesCompleted,\r\n        levelUp,\r\n        startNewChallenge,\r\n        activeChallenge,\r\n        resetChallenge,\r\n        experienceToNextLevel,\r\n        completeChallenge,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}