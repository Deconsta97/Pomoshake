{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\deco_\\\\NLW\\\\pomoshake-next\\\\src\\\\components\\\\ExperienceBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/ExperienceBar.module.css\";\nexport function ExperienceBar() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      currentExperience = _useContext.currentExperience,\n      experienceToNextLevel = _useContext.experienceToNextLevel;\n\n  var percentToNextLevel = Math.round(currentExperience * 100) / experienceToNextLevel;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: styles.experienceBar,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"0 xp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.currentExperience,\n        style: {\n          left: \"\".concat(percentToNextLevel, \"%\")\n        },\n        children: [currentExperience, \" xp\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [experienceToNextLevel, \" xp\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExperienceBar, \"vJz9w/yPxCuS+EIzmpz2qzto+DA=\");\n\n_c = ExperienceBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperienceBar\");","map":{"version":3,"sources":["C:/Users/deco_/NLW/pomoshake-next/src/components/ExperienceBar.tsx"],"names":["useContext","ChallengesContext","styles","ExperienceBar","currentExperience","experienceToNextLevel","percentToNextLevel","Math","round","experienceBar","width","left"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,MAAP,MAAmB,+CAAnB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAAA,oBACuBH,UAAU,CAC7DC,iBAD6D,CADjC;AAAA,MACtBG,iBADsB,eACtBA,iBADsB;AAAA,MACHC,qBADG,eACHA,qBADG;;AAK9B,MAAMC,kBAAkB,GACtBC,IAAI,CAACC,KAAL,CAAWJ,iBAAiB,GAAG,GAA/B,IAAsCC,qBADxC;AAGA,sBACE;AAAQ,IAAA,SAAS,EAAEH,MAAM,CAACO,aAA1B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAER,MAAM,CAACE,iBADpB;AAEE,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,YAAKL,kBAAL;AAAN,SAFT;AAAA,mBAIGF,iBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA,iBAAOC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBeF,a;;KAAAA,a","sourcesContent":["import { useContext } from \"react\";\r\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\r\nimport styles from \"../styles/components/ExperienceBar.module.css\";\r\n\r\nexport function ExperienceBar() {\r\n  const { currentExperience, experienceToNextLevel } = useContext(\r\n    ChallengesContext\r\n  );\r\n\r\n  const percentToNextLevel =\r\n    Math.round(currentExperience * 100) / experienceToNextLevel;\r\n\r\n  return (\r\n    <header className={styles.experienceBar}>\r\n      <span>0 xp</span>\r\n      <div>\r\n        <div style={{ width: \"50%\" }} />\r\n        <span\r\n          className={styles.currentExperience}\r\n          style={{ left: `${percentToNextLevel}%` }}\r\n        >\r\n          {currentExperience} xp\r\n        </span>\r\n      </div>\r\n      <span>{experienceToNextLevel} xp</span>\r\n    </header>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}